/*
 * Copyright 2018-2019 Devsoap Inc.
 * Copyright 2019 Vaadin Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.apache.tools.ant.filters.ReplaceTokens

/***********************************************************************************************************************
 *
 * Plugins
 *
 **********************************************************************************************************************/
plugins {
    id 'java-gradle-plugin'
	id 'maven-publish'
    id 'groovy'
    id 'idea'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

/***********************************************************************************************************************
 *
 * Basic properties
 *
 **********************************************************************************************************************/

defaultTasks 'jar'
group 'com.vaadin'
version = project.hasProperty('BUILD_VERSION') ? getProperty('BUILD_VERSION') : '1.0-SNAPSHOT-'+ new Date().format('yyyyMMdd')
archivesBaseName = 'vaadin-gradle-plugin'
sourceCompatibility = 1.8
targetCompatibility = 1.8

/***********************************************************************************************************************
 *
 * Sources
 *
 **********************************************************************************************************************/

sourceSets {
    functionalTest {
        groovy {
            srcDir file('src/functionalTest/groovy')
        }
        resources {
            srcDir file('src/functionalTest/resources')
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs){
        filesMatching('versions.properties'){
            filter(ReplaceTokens, tokens: [
                version: project.version,
                signature: System.getenv('PRODUCT_SIGNATURE') ?: 'e1058e32-c659-4606-876d-6ace3703292f' /* TODO REPLACE! */
            ])
        }
    }
}

/***********************************************************************************************************************
 *
 * Repositories & Dependencies
 *
 **********************************************************************************************************************/

repositories {
    mavenCentral()
    jcenter()
    maven { url = 'https://plugins.gradle.org/m2/' }
}

dependencies {
    compile localGroovy()

    compile 'com.github.node-gradle:gradle-node-plugin:2.2.1'
    compile 'io.github.classgraph:classgraph:4.8.49'
    testCompile('junit:junit:4.12')

    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61")
    compile("com.vaadin:flow-migration:2.1.4")
    compile("org.zeroturnaround:zt-exec:1.11")
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

/***********************************************************************************************************************
 *
 * Artifacts
 *
 **********************************************************************************************************************/

jar {
    manifest{
        attributes(
                'Vaadin-Package-Version': 1,
                'Implementation-Title': 'Vaadin Gradle Plugin',
                'Implementation-Version': version,
                'Implementation-Vendor': 'Vaadin Ltd',
        )
    }
    from 'gradle.properties'
}

/**
 * Plugin artifact sources.
 */
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    include 'com/**/*.groovy'
    include 'com/**/*.java'
    include 'com/**/*.kt'
}

/**
 * Artifacts in build
 */
artifacts {
    archives jar
    archives sourcesJar
}

/**
 * API documentation
 */
groovydoc {
    docTitle = "Vaadin Gradle Plugin $version API"
    windowTitle = "Vaadin Gradle Plugin $version"
    footer = "Vaadin Gradle Plugin is maintained by <a href=\"https://vaadin.com/\">Vaadin Ltd</a>."
}


/***********************************************************************************************************************
 *
 * Testing & Quality
 *
 ***********************************************************************************************************************/
task functionalTest(type: Test) {
    dependsOn test, jar
    group = 'Verification'

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    maxParallelForks = 1
    jvmArgs('-Xms512M', '-Xmx1024M')
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}
check.dependsOn functionalTest

/***********************************************************************************************************************
 *
 * Deployment
 *
 ***********************************************************************************************************************/
gradlePlugin {
    testSourceSets sourceSets.functionalTest
    plugins {
        vaadinPlugin {
            id = 'com.vaadin'
            implementationClass = 'com.vaadin.gradle.VaadinPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/vaadin/vaadin-gradle-plugin'
    vcsUrl = 'https://github.com/vaadin/vaadin-gradle-plugin'
    description = 'Build Vaadin applications with Gradle'
    tags = ['vaadin', 'vaadin-flow', 'vaadin-elements', 'polymer', 'java', 'groovy', 'kotlin']
    plugins {
        vaadinPlugin {
            id = gradlePlugin.plugins.vaadinPlugin.id
            displayName = 'Vaadin Gradle Plugin'
        }
    }
    mavenCoordinates {
        groupId = project.group
        artifactId = project.archivesBaseName
    }
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = project.group
			artifactId = project.archivesBaseName
			version = project.version

			from components.java
		}
	}
}

/***********************************************************************************************************************
 *
 * Misc.
 *
 **********************************************************************************************************************/
wrapper {
    gradleVersion = '5.6'
    distributionUrl = distributionUrl.replace('bin', 'all') // Download sources
}

